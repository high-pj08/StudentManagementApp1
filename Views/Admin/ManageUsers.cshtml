@model IEnumerable<StudentManagementApp.Models.ApplicationUser>
@using Microsoft.AspNetCore.Identity // Add this using directive
@inject UserManager<ApplicationUser> UserManager // Add this inject directive
@using StudentManagementApp.Models // Add this using directive if not already present

@{
    ViewData["Title"] = "Manage Users";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">Manage Users</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="mb-4 flex justify-between items-center">
    <a asp-action="CreateRole" class="inline-block bg-purple-500 text-white px-4 py-2 rounded-md hover:bg-purple-600 transition-colors duration-200">Create New Role</a>
</div>

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Username
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    First Name
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Last Name
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Email
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Roles
                </th>
                <th scope="col" class="relative px-6 py-3">
                    <span class="sr-only">Actions</span>
                </th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var user in Model)
            {
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => user.UserName)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => user.FirstName)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => user.LastName)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => user.Email)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @{
                            // Ensure UserManager is available here
                            var roles = await UserManager.GetRolesAsync(user);
                            <span>@(string.Join(", ", roles))</span>
                        }
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a asp-action="EditUserRoles" asp-route-id="@user.Id" class="text-indigo-600 hover:text-indigo-900 mr-2">Edit Roles</a> |
                        <a asp-action="DeleteUser" asp-route-id="@user.Id" class="text-red-600 hover:text-red-900">Delete User</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
