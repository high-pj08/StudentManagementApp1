@model IEnumerable<StudentManagementApp.ViewModels.StudentFeeViewModel>

@{
    ViewData["Title"] = "Manage Student-Specific Fees";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">Manage Student-Specific Fees</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<p class="mb-4">
    <a asp-action="CreateStudentFee" class="inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200">Assign New Student Fee</a>
</p>

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    @if (!Model.Any())
    {
        <p class="text-gray-600 text-center py-4">No student-specific fees assigned yet.</p>
    }
    else
    {
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.StudentName)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.FeeTypeName)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.DueDate)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th scope="col" class="relative px-6 py-3">
                        <span class="sr-only">Actions</span>
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.StudentName)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.FeeTypeName)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @item.Amount.ToString("C")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <a asp-action="EditStudentFee" asp-route-id="@item.Id" class="text-indigo-600 hover:text-indigo-900 mr-4">Edit</a>
                            <a asp-action="DeleteStudentFee" asp-route-id="@item.Id" class="text-red-600 hover:text-red-900">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
