@model StudentManagementApp.ViewModels.MarkAttendanceViewModel

@{
    ViewData["Title"] = "Mark Attendance";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">Mark Attendance for @Model.AttendanceDate.ToShortDateString()</h1>
<h2 class="text-2xl font-semibold text-gray-700 mb-4">Class: @(Model.AssignedClasses?.FirstOrDefault(c => c.Value == Model.ClassId.ToString())?.Text) | Subject: @(Model.AssignedSubjects?.FirstOrDefault(s => s.Value == Model.SubjectId.ToString())?.Text)</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    <form asp-action="SaveAttendance" method="post">
        <input type="hidden" asp-for="ClassId" />
        <input type="hidden" asp-for="SubjectId" />
        <input type="hidden" asp-for="AttendanceDate" />

        @if (!Model.Students.Any())
        {
            <p class="text-gray-600 text-center py-4">No active students found for this class. Please ensure students are enrolled in this class.</p>
        }
        else
        {
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Student Name
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Attendance Status
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @for (int i = 0; i < Model.Students.Count; i++)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @Html.DisplayFor(modelItem => Model.Students[i].StudentName)
                                <input type="hidden" asp-for="Students[i].StudentId" />
                                <input type="hidden" asp-for="Students[i].StudentName" />
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <select asp-for="Students[i].Status" class="shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="Present">Present</option>
                                    <option value="Absent">Absent</option>
                                    <option value="Late">Late</option>
                                    <option value="Excused">Excused</option>
                                </select>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="flex items-center justify-between mt-6">
                <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition-colors duration-200">
                    Save Attendance
                </button>
                <a asp-action="Index" class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800">
                    Back to Selection
                </a>
            </div>
        }
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
