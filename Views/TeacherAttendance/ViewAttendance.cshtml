@model IEnumerable<StudentManagementApp.Models.Attendance>

@{
    ViewData["Title"] = "View Attendance";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">View Attendance Records</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="bg-white p-6 rounded-lg shadow-md mb-6">
    <form asp-action="ViewAttendance" method="get" class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
            <label for="classId" class="block text-gray-700 text-sm font-bold mb-2">Class:</label>
            <select id="classId" name="classId" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" asp-items="ViewBag.ClassId">
                <option value="">All Classes</option>
            </select>
        </div>
        <div>
            <label for="subjectId" class="block text-gray-700 text-sm font-bold mb-2">Subject:</label>
            <select id="subjectId" name="subjectId" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" asp-items="ViewBag.SubjectId">
                <option value="">All Subjects</option>
            </select>
        </div>
        <div>
            <label for="attendanceDate" class="block text-gray-700 text-sm font-bold mb-2">Date:</label>
            <input type="date" id="attendanceDate" name="attendanceDate" value="@(((DateTime)ViewBag.AttendanceDate).ToString("yyyy-MM-dd"))" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
        </div>
        <div class="md:col-span-3 flex justify-end mt-4">
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition-colors duration-200">
                Filter
            </button>
        </div>
    </form>
</div>

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    @if (!Model.Any())
    {
        <p class="text-gray-600 text-center py-4">No attendance records found for the selected filters.</p>
    }
    else
    {
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.AttendanceDate)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Student)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Class)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Subject)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    @* No actions here, this is a view-only page for teachers *@
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.AttendanceDate)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Student!.FullName)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Class!.NameWithSection)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Subject!.Name)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
