@model IEnumerable<StudentManagementApp.Models.Student>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager // Inject UserManager if needed for user-specific logic
@using StudentManagementApp.Models

@{
    ViewData["Title"] = "Students List";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">Students List</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

@* Only Admin can see the "Create New Student" button *@
@if (User.IsInRole("Admin"))
{
    <p class="mb-4">
        <a asp-action="Create" class="inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200">Create New Student</a>
    </p>
}

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    @Html.DisplayNameFor(model => model.EnrollmentDate)
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Login Account
                </th>
                <th scope="col" class="relative px-6 py-3">
                    <span class="sr-only">Actions</span>
                </th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var item in Model)
            {
                // Logic to show only own record for Student role
                @if (User.IsInRole("Student") && item.ApplicationUserId != UserManager.GetUserId(User))
                {
                    // Do not render this row if it's not the current student's record
                    continue;
                }
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @Html.DisplayFor(modelItem => item.EnrollmentDate)
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @if (item.ApplicationUser != null)
                        {
                            <span class="text-green-600 font-semibold">Yes (@item.ApplicationUser.UserName)</span>
                        }
                        else
                        {
                            <span class="text-red-600">No</span>
                        }
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        @* Edit button visible to Admin and Teacher, or Student for their own record *@
                        @if (User.IsInRole("Admin") || User.IsInRole("Teacher") || (User.IsInRole("Student") && item.ApplicationUserId == UserManager.GetUserId(User)))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="text-indigo-600 hover:text-indigo-900 mr-2">Edit</a>
                        }
                        @* Details button visible to Admin, Teacher, or Student for their own record *@
                        @if (User.IsInRole("Admin") || User.IsInRole("Teacher") || (User.IsInRole("Student") && item.ApplicationUserId == UserManager.GetUserId(User)))
                        {
                            <a asp-action="Details" asp-route-id="@item.Id" class="text-blue-600 hover:text-blue-900 mr-2">Details</a>
                        }
                        @* Delete button visible only to Admin *@
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id" class="text-red-600 hover:text-red-900">Delete</a>
                        }
                    </td>
                </tr>
            }
            @if (!Model.Any() || (User.IsInRole("Student") && !Model.Any(s => s.ApplicationUserId == UserManager.GetUserId(User))))
            {
                <tr>
                    <td colspan="6" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">No students found or no access to view.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
