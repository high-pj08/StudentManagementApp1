@model StudentManagementApp.ViewModels.ParentInvoiceListViewModel

@{
    ViewData["Title"] = "My Invoices";
}

<h1 class="text-3xl font-bold text-gray-800 mb-6">My Invoices</h1>
<h2 class="text-xl text-gray-700 mb-8">Hello, @Model.ParentFullName! Here are your invoices.</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-md" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<p class="mb-4">
    <a asp-controller="ParentPayments" asp-action="MakePayment" class="inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200">Make New Payment</a>
</p>

<div class="bg-white p-6 rounded-lg shadow-md overflow-x-auto">
    @if (!Model.Invoices.Any())
    {
        <p class="text-gray-600 text-center py-4">No invoices found for your account.</p>
    }
    else
    {
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.InvoiceNumber)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.StudentFullName)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.IssueDate)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.DueDate)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.TotalAmount)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.AmountPaid)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.BalanceDue)
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Invoices.FirstOrDefault()!.Status)
                    </th>
                    <th scope="col" class="relative px-6 py-3">
                        <span class="sr-only">Actions</span>
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var item in Model.Invoices)
                {
                    <tr class="@(item.IsOverdue ? "bg-red-50" : "")">
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.InvoiceNumber)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.StudentFullName)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.IssueDate)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @item.TotalAmount.ToString("C")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @item.AmountPaid.ToString("C")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap font-semibold @(item.BalanceDue > 0 ? "text-red-600" : "text-green-600")">
                            @item.BalanceDue.ToString("C")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.Status)
                            @if (item.IsOverdue)
                            {
                                <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Overdue!</span>
                            }
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <a asp-action="InvoiceDetails" asp-route-id="@item.InvoiceId" class="text-blue-600 hover:text-blue-900 mr-4">Details</a>
                            @if (item.BalanceDue > 0)
                            {
                                <a asp-controller="ParentPayments" asp-action="MakePayment" asp-route-invoiceId="@item.InvoiceId" class="text-green-600 hover:text-green-900">Pay Now</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
